{"version":3,"file":"static/js/559.4e30d4c9.chunk.js","mappings":"2MACA,EAAiC,oCAAjC,EAAgF,8BAAhF,EAA2H,gCAA3H,EAA6K,qCAA7K,EAAiO,kCAAjO,EAAiR,iCAAjR,EAAgU,iCAAhU,EAAgX,kC,8BCDnWA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,MAAV,E,UCCnC,EAA8B,4B,SC2B9B,EAtBe,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MACXF,GAASG,EAAAA,EAAAA,IAAYL,GAM3B,OACE,iBAAKM,UAAWC,EAAhB,WACE,cAAGD,UAAU,OAAb,SAAoB,2BACpB,kBACEE,KAAK,OACLC,KAAK,SACLC,MAAOR,EACPS,UAAQ,EACRC,SAZe,SAAAC,GACnBV,GAASW,EAAAA,EAAAA,IAAUD,EAAME,cAAcL,OACxC,MAcF,E,8BCgDD,EA1DoB,WAClB,IAAMP,GAAWC,EAAAA,EAAAA,MACXY,GAAWX,EAAAA,EAAAA,IAAYY,EAAAA,IACvBC,GAAYb,EAAAA,EAAAA,IAAYc,EAAAA,IAExBC,GAAQf,EAAAA,EAAAA,IAAYgB,EAAAA,IAEpBnB,GAASG,EAAAA,EAAAA,IAAYL,GAUrBsB,EAPqB,WACzB,IAAMC,EAAmBrB,EAAOsB,cAChC,OAAOR,EAASd,QAAO,SAAAuB,GAAO,OAC5BA,EAAQhB,KAAKe,cAAcE,SAASH,EADR,GAG/B,CAEuBI,GAElBC,EACJV,IAAcE,GACZ,SAAC,KAAD,CACES,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClBC,SAAS,EACTC,MAAM,OACNC,OAAO,UAGT,SAAC,MAAD,CAAS5B,UAAWC,IAExB,OACE,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAU,QAAd,SAAsB,cACtB,iBAAKA,UAAWC,EAAhB,WACE,SAAC,EAAD,KACA,eAAID,UAAWC,EAAf,SACGe,EAAgBa,KAAI,gBAAGC,EAAH,EAAGA,GAAI3B,EAAP,EAAOA,KAAM4B,EAAb,EAAaA,OAAb,OACnB,gBAAa/B,UAAWC,EAAxB,WACE,eAAGD,UAAWC,EAAd,WACE,SAAC,MAAD,CAAqBD,UAAWC,IAC/BE,EAAK,KAAG4B,MAEX,mBACE/B,WAAWgC,EAAAA,EAAAA,GAAK,4BAA6B/B,GAC7CgC,QAAS,kBAtCK,SAAAH,GAAE,OAAIjC,GAASqC,EAAAA,EAAAA,IAAcJ,GAA3B,CAsCDK,CAAoBL,EAA1B,EAFX,SAIGR,MATIQ,EADU,WAkB9B,ECnEc,SAASM,IACtB,IAAMvC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAuC,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAE,CAACzC,KAGF,+BACE,SAAC,EAAD,KAGL,C,wGCjBM,IAAMc,EAAc,SAAAhB,GAAK,OAAIA,EAAMe,SAAS6B,KAAnB,EAEnB1B,EAAe,SAAAlB,GAAK,OAAIA,EAAMe,SAASE,SAAnB,EAEpBG,EAAW,SAAApB,GAAK,OAAIA,EAAMe,SAASI,KAAnB,C","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/filter/filterSelector.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js","redux/contacts/contactsSelector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contentwrapper\":\"ContactList_contentwrapper__YDekK\",\"usericon\":\"ContactList_usericon__dMSi9\",\"deleteicon\":\"ContactList_deleteicon__YhODj\",\"contactswrapper\":\"ContactList_contactswrapper__3p8V8\",\"contactslist\":\"ContactList_contactslist__rQ+XQ\",\"contactitem\":\"ContactList_contactitem__UoO1S\",\"contactinfo\":\"ContactList_contactinfo__PCqmH\",\"deletebutton\":\"ContactList_deletebutton__odoj5\"};","export const filterSelector = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterinput\":\"Filter_filterinput__Rk5X8\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterSelector } from 'redux/filter/filterSelector';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(filterSelector);\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <div className={css.filterinput}>\n      <p className=\"text\">Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        required\n        onChange={changeFilter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { AiOutlineUserDelete } from 'react-icons/ai';\nimport css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  getContacts,\n  getError,\n  getIsLoading,\n} from 'redux/contacts/contactsSelector';\nimport { filterSelector } from 'redux/filter/filterSelector';\nimport Filter from 'components/Filter';\nimport { BiTrash } from 'react-icons/bi';\nimport clsx from 'clsx';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n\n  const error = useSelector(getError);\n\n  const filter = useSelector(filterSelector);\n  const handleDeleteContact = id => dispatch(deleteContact(id));\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  const deleteButtonContent =\n    isLoading && !error ? (\n      <RotatingLines\n        strokeColor=\"white\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        visible={true}\n        width=\"16px\"\n        height=\"16px\"\n      />\n    ) : (\n      <BiTrash className={css.deleteicon} />\n    );\n  return (\n    <div className={css.contentwrapper}>\n      <h1 className=\"title\">Contacts</h1>\n      <div className={css.contactswrapper}>\n        <Filter />\n        <ul className={css.contactslist}>\n          {visibleContacts.map(({ id, name, number }) => (\n            <li key={id} className={css.contactitem}>\n              <p className={css.contactinfo}>\n                <AiOutlineUserDelete className={css.usericon} />\n                {name}: {number}\n              </p>\n              <button\n                className={clsx('button-common button-main', css.deletebutton)}\n                onClick={() => handleDeleteContact(id)}\n              >\n                {deleteButtonContent}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import ContactList from 'components/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactList />\n    </>\n  );\n}\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n"],"names":["filterSelector","state","filter","dispatch","useDispatch","useSelector","className","css","type","name","value","required","onChange","event","setFilter","currentTarget","contacts","getContacts","isLoading","getIsLoading","error","getError","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","deleteButtonContent","strokeColor","strokeWidth","animationDuration","visible","width","height","map","id","number","clsx","onClick","deleteContact","handleDeleteContact","Contacts","useEffect","fetchContacts","items"],"sourceRoot":""}